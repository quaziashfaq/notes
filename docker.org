#+STARTUP: indent
#+STARTUP: hidestars

* Next things to learn
Puppet
Chef

Docker Management tool
Shipyard
Portainer
Kitematic

Logging Drivers
syslog
Graylog's GELF protocl
Fluentd
log rotation driver

Go Template

Union Mount

bootfs
initrd images
rootfs


kernel
namespaces
cgroups
grub

* Installation of Docker
Remove old installation of docker.
$ sudo apt-get remove docker docker-engine docker.io containerd runc

Update the system
$ sudo apt-get update
$ sudo apt-get upgrade


Install packages to allow apt to use a repository over HTTPS:

$ sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common


Add Dockerâ€™s official GPG key:

$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88, by searching for the last 8 characters of the fingerprint.

$ sudo apt-key fingerprint 0EBFCD88

pub   rsa4096 2017-02-22 [SCEA]
      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
uid           [ unknown] Docker Release (CE deb) <docker@docker.com>
sub   rsa4096 2017-02-22 [S]


$ sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

$ sudo apt update
$ sudo apt upgrade

$ sudo apt-get install docker-ce docker-ce-cli containerd.io

* Operations
** git clone from another machine
At first create password less ssh login to ease the git clone process.
Then just do the git clone
$ git clone <server-ip>:/home/<username>/<repo-path>

* Registry
** Run a registry server
** Private registry push fail: server gave HTTP response to HTTPS client
For Docker version 18.09.2, I followed https://success.docker.com/article/using-systemd-to-control-the-docker-daemon

sudo systemctl edit docker
add below lines
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd -H fd:// --insecure-registry registry:5000

sudo systemctl daemon-reload
systemctl restart docker
systemctl status docker
